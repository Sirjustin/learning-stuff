#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass extbook
\begin_preamble
\usepackage{algorithm}
\usepackage{algpseudocode}  
\end_preamble
\use_default_options false
\master CNTKBook-master.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Paragraph
Abstract
\end_layout

\begin_layout Paragraph
We introduce computational network (CN), a unified framework for describing
 arbitrary learning machines, such as deep neural networks (DNNs), convolutional
 neural networks (CNNs), recurrent neural networks (RNNs), long short term
 memory (LSTM), logistic regression, and maximum entropy model, that can
 be illustrated as a series of computational steps.
 A CN is a directed graph in which each leaf node represents an input value
 or a parameter and each non-leaf node represents a matrix operation upon
 its children.
 We describe algorithms to carry out forward computation and gradient calculatio
n in CN and introduce most popular computation node types used in a typical
 CN.
 
\end_layout

\begin_layout Paragraph
We further introduce the computational network toolkit (CNTK), an implementation
 of CN that supports both GPU and CPU.
 We describe the architecture and the key components of the CNTK, the command
 line options to use CNTK, and the network definition and model editing
 language, and provide sample setups for acoustic model, language model,
 and spoken language understanding.
 We also describe the Argon speech recognition decoder as an example to
 integrate with CNTK.
\end_layout

\end_body
\end_document
